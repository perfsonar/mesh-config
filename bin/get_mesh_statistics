#!/usr/bin/perl

use strict;
use warnings;

use FindBin qw($RealBin);

use lib "$RealBin/../lib";

use Cwd 'abs_path';
use Getopt::Long;
use Log::Log4perl qw(:easy);


use perfSONAR_PS::MeshConfig::Statistic;	

Log::Log4perl->easy_init($DEBUG);

my $INPUT = '-';
my $OUTPUT = '-';
my $LOGGER_CONF;
my $DEBUGFLAG;
my $OUTPUT_FORMAT="str";
my $HELP;


my ( $status, $res );
$status = GetOptions(
    'input=s'  => \$INPUT,
    'output=s' => \$OUTPUT,
    'logger=s'  => \$LOGGER_CONF,
    'verbose'   => \$DEBUGFLAG,
    'format=s'   => \$OUTPUT_FORMAT,
    'help'      => \$HELP
);



my $logger;
unless ( $LOGGER_CONF ) {
    use Log::Log4perl qw(:easy);

    my $output_level = $INFO;
    if ( $DEBUGFLAG ) {
        $output_level = $DEBUG;
    }

    my %logger_opts = (
        level  => $output_level,
        layout => '%d (%P) %p> %F{1}:%L %M - %m%n',
    );

    Log::Log4perl->easy_init( \%logger_opts );
} else {
    use Log::Log4perl qw(get_logger :levels);

    Log::Log4perl->init( $LOGGER_CONF );
}

$logger = get_logger( "perfSONAR_PS" );
$logger->level( $DEBUG ) if $DEBUGFLAG;

if (not $INPUT){
	die("No central mesh config file defined for statistic report.");
}

my $mesh_file_path = abs_path($INPUT);

my $statistics = perfSONAR_PS::MeshConfig::Statistic->new();
$statistics->init(configuration_file => $mesh_file_path);
$statistics->build_statistics();

if ($OUTPUT_FORMAT eq "str") {
	print $statistics->as_string() . "\n";
}

exit 0;